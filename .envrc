#!/usr/bin/env bash

set -euo pipefail

# This is an example of a .envrc file for use with direnv.
# It sets up the environment for the project.

: "${PATH_BASE:="$(git rev-parse --show-toplevel)"}"
: "${PATH_BIN:="${PATH_BASE}/.bin"}"
export PATH_BASE PATH_BIN

# shellcheck disable=SC2120
path::add() {
  command -v PATH_add 1>/dev/null || {
    _error "This can be only run within direnv"
    return
  }
  PATH_add "${1}"
}

export::env() {
  local env="${PATH_BASE}/${1}"
  # shellcheck disable=SC2046
  [ ! -f "${env}" ] || {
    export $(grep -v '^#' "${env}" | sed -E 's/\s+=\s+/=/g' | xargs -d '\n')

    ! command -v watch_file &>/dev/null ||
      watch_file "${env}"
  }
}

copy::template() {
  local -r file="${PATH_BASE}/${1}"
  [ -f "${file}" ] || {
    cp "${file}.template" "${file}" 2>/dev/null || :
  }
}

main() {
    copy::template .env
    copy::template .secrets

    export::env .env
    export::env .secrets

    path::add "${PATH_BIN:-"${PATH_BASE}/.bin"}"
}

[ -z "${DIRENV_IN_ENVRC}" ] || main "${@}"